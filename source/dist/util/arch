#!/bin/sh
#
#  arch
#
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
#  Portions of this software are Copyright (c) 2011 Univa Corporation
#
##########################################################################
#___INFO__MARK_END__
#
#  The original idea of "aimk" where this script is based on came from the
#  PVM 3.x distribution, 22 Jul 1991 Robert Manchek manchek@CS.UTK.EDU.
#
#  call:   arch       (print SGEEE architecture string)
#          arch -m    (print default MANPATH of system)
#          arch -mt   (print either "man" or "catman")
#          arch -lib  (print name of variable to extend shared library path)

# On some architectures, it is necessary to run the manpath(1) command
# with the user's path instead of our "safe" one.  Thus we need to
# save the old value of PATH for later restoration.
#

SAFE_PATH=/bin:/usr/bin:/usr/sbin
OLD_PATH=$PATH
PATH=$SAFE_PATH

ARCH=UNKNOWN

if [ -x /bin/uname ]; then
   UNAME=/bin/uname
elif [ -x /usr/bin/uname ]; then
   UNAME=/usr/bin/uname
else
   echo ERROR: \"uname\" command not found
   exit 1
fi

ossysname="`$UNAME -s`"
osmachine="`$UNAME -m`"
osrelease="`$UNAME -r`"

case $ossysname in
Darwin)
   case $osmachine in
      i386)
         case $osrelease in
            10.1.*)
               darwin_machine=x86
               ;;
            10.[2-8].*)
               darwin_machine=x64
               ;;
            *)
               darwin_machine=unknown
               ;;
            esac
         ;;
      Power*)
         darwin_machine=ppc
         ;;
      arm64)
         darwin_machine=arm64
         ;;
      *)
         darwin_machine=unsupported
         ;;
   esac
   osversion=`echo $osrelease | cut -f 1 -d .`
   if [ $osversion -lt 8 ]; then
      ARCH=darwin
   else
      ARCH=darwin-$darwin_machine
   fi
   ;;
FreeBSD|DragonFly)
   ARCH=fbsd-$osmachine
   ;;
NetBSD)
    osprocessor="`$UNAME -p`"
    ARCH=nbsd-$osprocessor
    ;;
Linux)
   unsupported=""

   case $osmachine in
   i*86)
      lxmachine=x86
      ;;
   armv6*)
      lxmachine=arm6
      ;;
   armv7*)
      lxmachine=arm7
      ;;
   aarch64)
      lxmachine=arm64
      ;;
   alpha)
      lxmachine=alpha
      ;;
   sparc)
      lxmachine=sparc
      ;;
   sparc64)
      lxmachine=sparc
      ;;
   x86_64)
      lxmachine=amd64
      ;;
   aarch64)
      lxmachine=arm64
      ;;
   ia64)
      lxmachine=ia64
      ;;
   ppc)
      lxmachine=ppc
      ;;
   ppc64)
      lxmachine=ppc64
      ;;
   mips)
      lxmachine=mips
      ;;
   mips64)
      lxmachine=mips64
      ;;
   s390)
      lxmachine=s390
      ;;
   s390x)
      lxmachine=s390x
      ;;
   riscv64)
      lxmachine=riscv64
      ;;
   *)
      unsupported="UNSUPPORTED-"
      lxmachine=$osmachine
   esac

   if [ "$unsupported" != "UNSUPPORTED-" ]; then
      case $osrelease in
      2.4.*|2.6.*|3.*|4.*|5.*|6.*)
         # verify the GNU C lib version
         # we expect libc version to be
         # >= 2.3 - this is our supported lx-* platform
         # == 2.2 - unsupported but known to build and work: ulx-* platform
         # <= 2.2 - not accepted as build or execution platform

         # there must be a /bin/sh installed, and it certainly uses libc
         libc_ldd=`ldd /bin/sh | grep libc.so.6`

         # retrieving libc location failed
         if [ $? -ne 0 ]; then
            unsupported="UNSUPPORTED-"
         else
            libc=`echo $libc_ldd | awk '{print $3}'`
            libc_string=`strings $libc | grep "GNU C Library"`
            if [ $? -ne 0 ]; then
               unsupported="UNSUPPORTED-"
            else
               libc_version=`echo $libc_string | tr ' ,' '\n' | grep "2\." | head -1 | cut -f 2 -d "." | cut -f 1 -d "-"`
               if [ $libc_version -lt 17 ]; then
                  unsupported="UNSUPPORTED-GLIBC-2.${libc_version}"
               else
                  if [ $libc_version -eq 17 ]; then
                     unsupported="u"
                  fi
               fi
            fi
         fi
         ;;
      *)
         unsupported="UNSUPPORTED-$osrelease"
      esac
   fi
   ARCH=${unsupported}lx-${lxmachine}
   ;;
SunOS)
   case $osmachine in
   sun4)
      ARCH=UNSUPPORTED-sun4
      ;;
   i86*)
      ARCH=sol-x86
      case $osrelease in
      5.[8]*)
         ARCH=usol-x86
         ;;
      5.[91]*)
         if [ `isainfo -b` = 64 ]; then
            ARCH=sol-amd64
         else
            ARCH=sol-x86
         fi
         ;;
      *)
         ARCH=UNSUPPORTED-SunOS-$osrelease
         ;;
      esac
      ;;
   *)
      case $osrelease in
      5.[8]*)
         if [ `isainfo -b` = 64 ]; then
            ARCH=usol-sparc64
         else
            ARCH=usol-sparc
         fi
         ;;
      5.[91]*)
         if [ `isainfo -b` = 64 ]; then
            ARCH=sol-sparc64
         else
            ARCH=sol-sparc
         fi
         ;;
      *)
         ARCH=UNSUPPORTED-SunOS-$osrelease
         ;;
      esac
      ;;
   esac
   ;;
*)
   ARCH=UNSUPPORTED-${ossysname}-${osmachine}-${osrelease}
   ;;
esac

if [ "$1" = "-m" -o "$1" = "-mt" -o "$1" = "-lib" ]; then
   MANTYPE=man
   SHARED_LIBRARY_PATH="LD_LIBRARY_PATH"
   DEFAULTMANPATH=/usr/man
   case $ARCH in
   darwin-*)
      DEFAULTMANPATH=`/usr/bin/manpath -q`
      SHARED_LIBRARY_PATH="DYLD_LIBRARY_PATH"
      ;;
   fbsd-*)
      PATH=$OLD_PATH
      DEFAULTMANPATH=`/usr/bin/manpath -q`
      PATH=$SAFE_PATH
      ;;
   nbsd-*)
      PATH=$OLD_PATH
      DEFAULTMANPATH=/usr/pkg/man:/usr/local/man:/usr/X11R6/man:/usr/share/man
      PATH=$SAFE_PATH
      ;;
   lx*)
      if [ "`which manpath 2>/dev/null`" != "" ]; then
         DEFAULTMANPATH=`manpath 2>/dev/null`
      else
         DEFAULTMANPATH=/usr/local/man:/usr/share/man:/usr/man:/usr/X11R6/man
      fi
      ;;
   sol-*)
      DEFAULTMANPATH=/usr/share/man
      # if bit-specific variable already set, use this variable!
      SHARED_LIBRARY_PATH_BITS="LD_LIBRARY_PATH_`isainfo -b`"
      if eval [ x\$$SHARED_LIBRARY_PATH_BITS != x ]; then
	      SHARED_LIBRARY_PATH=$SHARED_LIBRARY_PATH_BITS
      fi
      ;;
   esac

   if [ "$1" = "-m" ]; then
      echo $DEFAULTMANPATH
   elif [ "$1" = "-lib" ]; then
      echo $SHARED_LIBRARY_PATH
   else
      echo $MANTYPE
   fi
else
   echo $ARCH
fi
